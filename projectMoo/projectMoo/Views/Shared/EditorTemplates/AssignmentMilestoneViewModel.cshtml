@model projectMoo.Models.ViewModels.AssignmentMilestoneViewModel



   
    <div class="form-horizontal center">

            @Html.AntiForgeryToken()
            <h4>Milestone</h4>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                </div>
            </div>

              @for (int i = 0; i < Model.Input.Count; i++)
              {

                <div class="form-group">
                    @Html.LabelFor(model => model.Input[i], htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Input[i], new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Input[i], "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Output[i], htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Output[i], new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Output[i], "", new { @class = "text-danger" })
                    </div>
                </div>
              }



       
            <button type="button" class="btn btn-danger deleteRow">Remove</button>
    </div>